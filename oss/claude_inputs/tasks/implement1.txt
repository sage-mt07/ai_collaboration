OnError / Map / WithRetry DSL 実装と設計反映
件名：
.OnError().Map().WithRetry() DSLチェーンの実装および設計ドキュメント反映について

指示内容：
DSLチェーン構文の実装

EventSet<T> に以下の拡張DSLチェーンを実装すること：

csharp
コピーする
編集する
context.Orders
    .OnError(ErrorAction.Skip)
    .Map(order => ProcessOrder(order))
    .WithRetry(3);
目的は、Kafkaコンシューマにおける業務ロジックの中で例外制御を可能とする構造の提供。

OnError と WithRetry は .Map() に適用される中間演算子として機能すること。

Map前後での適用範囲を明示し、内部の型安全性と非同期制御（try/catch／await）を担保すること。

ドキュメント整備

第6章「エラー処理設計」に上記コード例と意味論対応表を追記すること。

例：

DSL	意味	実行位置
.OnError(ErrorAction.Skip)	例外発生時はスキップ	Map の前に設定
.Map(...)	POCOを業務ロジックに渡す	Kafkaから受信後
.WithRetry(3)	3回までリトライ	Map 実行中に失敗したとき

哲学的整合性の担保

LINQ構文の美しさと、業務ロジックの安全な流し込みを両立させること。

単なる例外ハンドラではなく、Kafkaと人間の橋渡しとして、この構文がOSSの核をなすことを意識すること。

背景：
この構文はOSSの「安心してKafkaを使える」という根本的価値を担保する機能です。Kafkaが「例外処理のない世界」であることに対し、本DSLはそれを補う形で、現場での運用実装を直接的に支える哲学的機能です。

締切：
初期実装および設計反映：次回コミットサイクルにてレビュー可能な状態にすること。